#include "../../inc/sh21.h"


int		info(char *elem, struct stat s)
{
	if(S_ISDIR(s.st_mode) || access(elem, X_OK) == -1)
		return (-1);
	else
		return (-2);
}

int		find_bin(char **path_tab, char *elem)
{
	int			i;
	struct stat s;

	i = -1;
	lstat(elem, &s);
	if (ft_strchr(elem, '/'))
		return (info(elem, s));
	if (path_tab)
		while(path_tab[++i])
		{
			path_tab[i] = ft_free_join(path_tab[i],
				ft_strjoin("/", elem), 'B');
			if (!access(path_tab[i], X_OK))
				return (i);
		}
	return (-1);
}

char	*search_exec(char *str, t_shell *sh, char **t_tmp, char *elem)
{
	int		i;
	char	**path_tab;
	int		info;

	i = -1;
	path_tab = ft_strsplit(ft_getenv("PATH", sh->env), ':');
	if ((info = find_bin(path_tab, t_tmp[1])) >= 0)
		elem = ft_strdup(path_tab[info]);
	if (info == -2)
		elem = ft_strdup(t_tmp[1]);
	ft_free_tab(path_tab);
//	if (tab_2d_len(t_tmp) > 2 || str[ft_strlen(str) - 1] == '=')
//		return (str);
	while (str[++i] && info != -1)
	{
		if (str[i] == '=')
		{
			free(str);
			str = ft_free_join(t_tmp[0], ft_free_join("=", elem, 'R'), 'R');
			return (str);
		}
	}
	free(str);
	return (NULL);
}

void	export_flag_b(t_shell *sh, int i)
{
	char	**tmp;
	char	*str;

	str = NULL;
	tmp = ft_strsplit(sh->av[i], '=');
	if (tab_2d_len(tmp) == 2)
	{
	sh->av[i] = search_exec(sh->av[i], sh, tmp, str);
	if (!sh->av[i])
		ft_putstr_fd("COMMAND NOT FOUND", 2);
	else if (ft_getenv(tmp[0], sh->var) == NULL)
	{
		str = ft_strdup(sh->av[i]);
		sh->var = rapid_set(str, sh->var, 0);
		sh->env = rapid_set(str, sh->env, 1);
	}
	else if (ft_getenv(tmp[0], sh->var) != NULL)
	{
		replace_elem(tmp[0], sh->av[i], sh->var, sh);
		replace_elem(tmp[0], sh->av[i], sh->env, sh);
	}
	}
	else
		ft_putendl_fd("need to put an assignation like %s=%sto work", 2);
	ft_free_tab(tmp);
}

void	export_flagb(t_shell *sh)
{
	int		i;
	
	i = 1;
	while (sh->av[++i])
	{
		if (ft_strchr(sh->av[i], '=') && ft_strchr(sh->av[i], '-'))
		{
			ft_putendl_fd("bad option -=", 2);
			return ;
		}
	}
	i = 1;
	while(sh->av[++i])
	{
		if (!ft_strchr(sh->av[i], '='))
			ft_putendl_fd("need to put an assignation to work", 2);
		else
			export_flag_b(sh, i);
	}
}
